# frozen_string_literal: true
class EcRegistration < EcdataRecord
  self.table_name = "wp_frm_items"

  # the hard-coded IDs here refer to the ones generated by EC2022 Wordpress form plugin. Yes, this is a hack. :)
  has_one :name_meta, -> { where(field_id: 6) },
    class_name: "EcRegistrationMeta", dependent: :destroy, foreign_key: :item_id, required: true, autosave: true

  has_one :vekn_meta, -> { where(field_id: 8) },
    class_name: "EcRegistrationMeta", dependent: :destroy, foreign_key: :item_id, required: true, autosave: true

  has_one :country_meta, -> { where(field_id: 10) },
    class_name: "EcRegistrationMeta", dependent: :destroy, foreign_key: :item_id, required: true, autosave: true

  default_scope { where(form_id: 2) }

  validates :name, presence: true
  validate :meta_validations

  def name=(value)
    self[:name] = name_meta.meta_value = value.strip
  end

  def vekn
    vekn_meta.meta_value
  end

  def vekn=(value)
    vekn_meta.meta_value = value.nil? ? nil : value.strip
  end

  def country
    country_meta.meta_value
  end

  def country=(value)
    country_meta.meta_value = value.nil? ? nil : value.strip
  end

  private

  before_save do |reg|
    # update updated_at on associated data changes too
    self.touch if vekn_meta.changed? || country_meta.changed?
  end

  def meta_validations
    if name.present? && name_meta.meta_value != name
      errors.add :base, "meta name must match name"
    end
    if vekn.present? && vekn.length != 7
      errors.add :base, "VEKN number must have 7 numbers"
    end
  end

end
