# frozen_string_literal: true
class EcRegistration < EcdataRecord
  self.table_name = "wp_frm_items"

  # the hard-coded IDs here refer to the ones generated by EC2022 Wordpress form plugin. Yes, this is a hack. :)
  FORM_ID = 2

  has_one :name_meta, -> { where(field_id: EcRegistrationMeta::NAME_FIELD_ID) },
          class_name: "EcRegistrationMeta", dependent: :destroy, foreign_key: :item_id, required: true, autosave: true

  has_one :vekn_meta, -> { where(field_id: EcRegistrationMeta::VEKN_FIELD_ID) },
          class_name: "EcRegistrationMeta", dependent: :destroy, foreign_key: :item_id, autosave: true

  has_one :country_meta, -> { where(field_id: EcRegistrationMeta::COUNTRY_FIELD_ID) },
          class_name: "EcRegistrationMeta", dependent: :destroy, foreign_key: :item_id, autosave: true

  default_scope { where(form_id: FORM_ID) }

  validates :name, presence: true
  validate :meta_validations

  def name=(value)
    self[:name] = self.name_meta.meta_value = value.strip
  end

  def vekn
    vekn_meta&.meta_value
  end

  def vekn=(value)
    if vekn_meta.nil?
      self.vekn_meta = EcRegistrationMeta.new(field_id: EcRegistrationMeta::VEKN_FIELD_ID,
                                              item_id: self.id, created_at: Time.now)
    end
    vekn_meta.meta_value = value.nil? ? nil : value.strip
  end

  def country
    country_meta&.meta_value
  end

  def country=(value)
    if country_meta.nil?
      self.country_meta = EcRegistrationMeta.new(field_id: EcRegistrationMeta::COUNTRY_FIELD_ID,
                                                 item_id: self.id, created_at: Time.now)
    end
    self.country_meta.meta_value = value.nil? ? nil : value.strip
  end

  def identifier
    "#{name} / #{vekn} / #{country}"
  end

  def any_changed?
    self.changed? || self.vekn_meta&.changed? || self.country_meta&.changed?
  end

  private

  before_save do |reg|
    # update updated_at on associated data changes too
    self.touch if any_changed?
  end

  def meta_validations
    if name.present? && name_meta.meta_value != name
      errors.add :base, "meta name must match name"
    end
    if vekn.present? && vekn.length != 7
      errors.add :base, "VEKN number must have 7 numbers"
    end
  end

end
